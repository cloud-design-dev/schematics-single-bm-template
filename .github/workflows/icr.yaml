name: ICR Image build and push

on:
  push:
    branches: [ "main" ]
    # When tested that it works, put restrictions on the paths
    # paths: ['containers/**']

env:
  MAIN_IMAGE_NAME: sch-bm-deploy
  CLEAN_IMAGE_NAME: sch-bm-clean
  REGISTRY_URL: us.icr.io
  ICR_NAMESPACE: rolling-iaas
  ICR_TOKEN: ${{secrets.ICR_TOKEN}}

jobs:
  build-and-push-main-job-image:
    name: Build main job image
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Get current date
      id: date
      run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
    - name: Build container image
      id: build-main-image
      uses: redhat-actions/buildah-build@v2
      with:
        image: ${{ env.ICR_NAMESPACE  }}/${{ env.MAIN_IMAGE_NAME }}
        tags: latest ${{ steps.date.outputs.date }}
        context: ./containers/main-job
        containerfiles: |
          ./containers/main-job/Dockerfile
    - name: Push To ICR
      id: push-main-image
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.build-main-image.outputs.image }}
        tags: ${{ steps.build-main-image.outputs.tags }}
        username: iamapikey
        password: ${{ env.ICR_TOKEN }}
        registry: ${{ env.REGISTRY_URL }}

    - name: Print image url
      run: echo "Image pushed to ${{ steps.push-main-image.outputs.registry-paths }}"
  
  build-and-push-clean-job-image:
    name: Build and push clean job image to ICR
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Get current date
      id: date
      run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
    - name: Build clean up job container image 
      id: build-clean-image
      uses: redhat-actions/buildah-build@v2
      with:
        image: ${{ env.ICR_NAMESPACE  }}/${{ env.CLEAN_IMAGE_NAME }}
        tags: latest ${{ steps.date.outputs.date }}
        containerfiles: |
          ./containers/clean-up/Dockerfile
    - name: Push To ICR
      id: push-cleanup-image
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.build-clean-image.outputs.image }}
        tags: ${{ steps.build-clean-image.outputs.tags }}
        username: iamapikey
        password: ${{ env.ICR_TOKEN }}
        registry: ${{ env.REGISTRY_URL }}

    - name: Print image url
      run: echo "Image pushed to ${{ steps.push-cleanup-image.outputs.registry-paths }}"